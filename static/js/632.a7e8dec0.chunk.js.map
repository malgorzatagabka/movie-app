{"version":3,"file":"static/js/632.a7e8dec0.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAEVC,EAAW,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCAAwCC,IADxC,cACjBE,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,qDAMXC,EAAQ,mCAAG,WAAMC,GAAN,uFACGN,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEK,EAAlE,gCADH,cACdH,EADc,yBAEbA,EAASC,MAFI,2CAAH,sDAORG,EAAU,mCAAG,WAAMC,GAAN,uFACCR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCP,EAAtC,oBADD,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAOVK,EAAO,mCAAG,WAAMD,GAAN,uFACIR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CP,EAA9C,oBADJ,cACbE,EADa,yBAEZA,EAASC,KAAKM,MAFF,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,uFACCR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CP,EAA9C,2BADD,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKVQ,EAAQ,mCAAG,WAAMJ,GAAN,uFACGR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCP,EAAtC,8CADH,cACdE,EADc,yBAEbA,EAASC,MAFI,2CAAH,qD,gJClCRS,EAAYC,EAAAA,GAAAA,IAAH,sTAaTC,EAAOD,EAAAA,GAAAA,KAAH,0C,mBCuBjB,EAhCa,WACX,IACA,ECLqB,SAAAN,GACrB,OAA4BQ,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACJX,IACFC,EAAAA,EAAAA,IAAQD,GAASY,MAAK,SAAAjB,GACpBe,GAAU,OAAIf,GACf,GACJ,GAAE,CAACK,IACG,CAAES,OAAAA,EACV,CDLoBI,EADCC,EAAAA,EAAAA,MAAZd,SACAS,EAAR,EAAQA,OAER,OAAKA,GAGH,SAACJ,EAAD,UACGI,EAAOM,KAAI,SAAAC,GACV,OACE,4BACE,gBACEC,IACED,EAAME,aAAN,0CACuCF,EAAME,cAD7C,+EAIFC,IAAKH,EAAMI,KACXC,MAAM,MACNC,OAAO,SAET,wBACE,SAACf,EAAD,UAAOS,EAAMI,UAEf,gCAAQJ,EAAMO,eAdNP,EAAMQ,GAiBnB,OAvBe,SAACC,EAAA,EAAD,GA0BrB,C","sources":["Api/Api.jsx","components/Cast/cast.styled.js","components/Cast/Cast.jsx","utils/hooks/useCast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API_KEY = '3a7b9fae23d21ee4f1e0a0e3e74eac23'\n\nexport const getTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`)\n    return response.data;\n};\n\n    \nexport const getQuery = async query  => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false&page=1`)\n    return response.data;\n   \n}\n\n\nexport const getMovieId = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\n\n\nexport const getCast = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n    return response.data.cast;\n}\n\nexport const getReviews = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    return response.data;\n}\n\nexport const getVideo = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US&append_to_response=videos`)\n    return response.data\n   \n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n     display: grid;\n     max-width: calc(100vw - 48px);\n     grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n     grid-gap: 26px;\n     margin-top: 0;\n     margin-bottom: 0;\n     padding: 0;\n     list-style: none;\n     margin-left: auto;\n     margin-right: auto;\n`;\n\nexport const Span = styled.span`\nfont-weight:600;\n`","import { useCast } from 'utils/hooks/useCast';\nimport { useParams } from 'react-router-dom';\nimport { Container, Span } from './cast.styled';\nimport Loader from 'components/Loader/Loader';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const { actors } = useCast(movieId);\n\n  if (!actors) return <Loader />;\n\n  return (\n    <Container>\n      {actors.map(actor => {\n        return (\n          <div key={actor.id}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n              }\n              alt={actor.name}\n              width=\"180\"\n              height=\"250\"\n            />\n            <p>\n              <Span>{actor.name}</Span>\n            </p>\n            <p>As: {actor.character}</p>\n          </div>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\nmovieId: PropTypes.string.isRequired,\n};","import { getCast } from 'Api/Api';\nimport { useEffect, useState } from 'react';\n\nexport const useCast = movieId => {\n  const [actors, setActors] = useState(null);\n\n  useEffect(() => {\n    if (movieId)\n      getCast(movieId).then(response => {\n        setActors([...response]);\n      });\n  }, [movieId]);\n  return { actors };\n};\n"],"names":["axios","API_KEY","getTrending","response","data","getQuery","query","getMovieId","movieId","getCast","cast","getReviews","getVideo","Container","styled","Span","useState","actors","setActors","useEffect","then","useCast","useParams","map","actor","src","profile_path","alt","name","width","height","character","id","Loader"],"sourceRoot":""}