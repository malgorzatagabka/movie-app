{"version":3,"file":"static/js/645.5c7d6367.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAEVC,EAAW,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCAAwCC,IADxC,cACjBE,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,qDAMXC,EAAQ,mCAAG,WAAMC,GAAN,uFACGN,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEK,EAAlE,gCADH,cACdH,EADc,yBAEbA,EAASC,MAFI,2CAAH,sDAORG,EAAU,mCAAG,WAAMC,GAAN,uFACCR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCP,EAAtC,oBADD,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAOVK,EAAO,mCAAG,WAAMD,GAAN,uFACIR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CP,EAA9C,oBADJ,cACbE,EADa,yBAEZA,EAASC,KAAKM,MAFF,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,uFACCR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CP,EAA9C,2BADD,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKVQ,EAAQ,mCAAG,WAAMJ,GAAN,uFACGR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCP,EAAtC,8CADH,cACdE,EADc,yBAEbA,EAASC,MAFI,2CAAH,qD,2ICArB,EAhCiB,WACf,IAAMS,GAAWC,EAAAA,EAAAA,MACjB,ECHyB,WACzB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACRlB,EAAAA,EAAAA,MAAcmB,MAAK,SAAAlB,GACjBc,GAAkB,OAAId,EAASmB,UAC/BH,EAAiBhB,EAASmB,QAAQ,GACnC,GACF,GAAE,IAEI,CAAEN,eAAAA,EAAgBE,cAAAA,EAC1B,CDT2CK,GAAlCP,EAAR,EAAQA,eAAgBE,EAAxB,EAAwBA,cAExB,OACE,6BACE,SAAC,KAAD,CAAMM,MAAO,CACXC,gBAAgB,wCAAD,OAA0CP,EAAcQ,cAAxD,MADjB,UAIE,UAAC,KAAD,YACE,wBAAKR,EAAcS,SACnB,6BAAKT,EAAcU,SAAWV,EAAcU,SAAW,cAG3D,SAAC,KAAD,UACGZ,EAAea,KAAI,SAAAC,GAAK,OACvB,SAAC,KAAD,WACE,UAAC,KAAD,CAAYC,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMrB,GAArD,WACE,SAAC,KAAD,CACEsB,IAAG,0CAAqCL,EAAMM,aAAeC,IAAG,UAAKP,EAAMH,UAG7E,0BAAKG,EAAMH,MAAX,WANUG,EAAME,GADG,QAchC,C,6NE/BYM,EAAYC,EAAAA,GAAAA,IAAH,sTAaTC,EAAUD,EAAAA,GAAAA,IAAH,8LAUPE,EAAQF,EAAAA,GAAAA,IAAH,+GAULG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,0FAMVK,EAAOL,EAAAA,GAAAA,IAAH,sLASJM,EAAcN,EAAAA,GAAAA,IAAH,8D","sources":["Api/Api.jsx","pages/HomePage.jsx","utils/hooks/useTrending.jsx","pages/home.styled.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API_KEY = '3a7b9fae23d21ee4f1e0a0e3e74eac23'\n\nexport const getTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`)\n    return response.data;\n};\n\n    \nexport const getQuery = async query  => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false&page=1`)\n    return response.data;\n   \n}\n\n\nexport const getMovieId = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\n\n\nexport const getCast = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n    return response.data.cast;\n}\n\nexport const getReviews = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    return response.data;\n}\n\nexport const getVideo = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US&append_to_response=videos`)\n    return response.data\n   \n}\n","import { useTrending } from 'utils/hooks/useTrending';\nimport { useLocation } from 'react-router-dom';\nimport { Container, Wrapper, Image, StyledLink, HeroContent, Hero } from './home.styled';\n\nconst HomePage = () => {\n  const location = useLocation();\n  const { trendingMovies, selectedMovie } = useTrending();\n\n  return (\n    <main>\n      <Hero style={{\n        backgroundImage: `url(https://image.tmdb.org/t/p/w1280/${selectedMovie.backdrop_path\n          })`\n      }}>\n        <HeroContent>\n          <h1>{selectedMovie.title}</h1>\n          <p> {selectedMovie.overview ? selectedMovie.overview : null}</p>\n        </HeroContent>\n      </Hero>\n      <Container>\n        {trendingMovies.map(movie => (\n          <Wrapper key={movie.id}>\n            <StyledLink to={`movies/${movie.id}`} state={{ from: location }}>\n              <Image\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={`${movie.title}`}\n              >\n              </Image>\n              <h5>{movie.title} </h5>\n            </StyledLink>\n          </Wrapper>\n        ))}\n      </Container>\n    </main>\n  );\n};\n\nexport default HomePage;\n","import { getTrending } from \"Api/Api\";\nimport { useEffect, useState } from \"react\";\n\nexport const useTrending = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState([])\n\n  useEffect(() => {\n    getTrending().then(response => {\n      setTrendingMovies([...response.results]);\n      setSelectedMovie(response.results[0])\n    });\n  }, []);\n\n  return { trendingMovies, selectedMovie };\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  width: 1280px;\n  display: grid;\n  max-width: calc(100vw - 48px);\n  //grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  grid-gap: 16px;\n  list-style: none;\n  align-items: center;\n  margin: 60px auto;\n  padding: 0 15px;\n`;\n\nexport const Wrapper = styled.div`\n  text-decoration: none;\n  text-align: center;\n  transition: transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Image = styled.img`\n  \n// object-fit: cover;\nheight:500px;\nwidth:100%;\nborder-radius: 2px;\n    \n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  font-weight: 600;\n  color: #ffffff;\n`;\n\nexport const Hero = styled.div`\n  min-height: 500px;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const HeroContent = styled.div`\n  padding: 0 15px;\n  margin: 0 auto;\n`;\n"],"names":["axios","API_KEY","getTrending","response","data","getQuery","query","getMovieId","movieId","getCast","cast","getReviews","getVideo","location","useLocation","useState","trendingMovies","setTrendingMovies","selectedMovie","setSelectedMovie","useEffect","then","results","useTrending","style","backgroundImage","backdrop_path","title","overview","map","movie","to","id","state","from","src","poster_path","alt","Container","styled","Wrapper","Image","StyledLink","Link","Hero","HeroContent"],"sourceRoot":""}